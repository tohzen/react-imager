{"ast":null,"code":"var _jsxFileName = \"/home/tohzen/coding/assignments/react-imager/React-Imager-main/src/components/Imager/Imager.js\";\nimport React, { Component } from \"react\";\nimport Display from \"..Display/Display\";\nimport Thumbnails from \"./Thumbnails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Imager extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: ['./images/Image1.png', './images/Image3.jpg', './images/Image4.jpg', './images/Image5.png', './images/Image6.png', './images/Image7.png', './images/Image8.png', './images/Image9.png', './images/Image10.png', './images/Image11.png', './images/Image12.png', './images/Image2.png'],\n      bigImage: \"\",\n      indexImage: \"\"\n    };\n\n    this.randomImageGenerator = () => {\n      let randomNum = Math.floor(Math.random() * this.state.images.length);\n      this.setState({\n        bigImage: this.state.images[randomNum]\n      });\n    };\n\n    this.backbutton = () => {\n      if (this.state.indexImage === 0) {\n        this.setState({\n          bigImage: this.state.images[this.state.images.length - 1],\n          indexImage: this.state.images.length - 1\n        });\n      } else {\n        this.setState({\n          bigImage: this.state.images[this.state.indexImage - 1],\n          indexImage: this.state.indexImage - 1\n        });\n      }\n    };\n\n    this.forwardButton = () => {\n      console.log(this.state.indexImage);\n\n      if (this.state.indexImage === 11) {\n        this.setState({\n          bigImage: this.state.images[0],\n          indexImage: 0\n        });\n      } else {\n        this.setState({\n          bigImage: this.state.images[this.state.indexImage + 1],\n          indexImage: this.state.indexImage + 1\n        });\n      }\n    };\n\n    this.thumbnailsSelect = (item, index) => {\n      console.log(item);\n      this.setState({\n        bigImage: item,\n        indexImage: index\n      });\n    };\n  }\n\n  componentDidMount() {\n    let randomNum = Math.floor(Math.random() * this.state.images.length);\n    this.setState({\n      bigImage: this.state.images[randomNum],\n      indexImage: randomNum\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        bigImage: this.state.bigImage,\n        randomImageGenerator: this.randomImageGenerator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.backbutton,\n        children: [\" \", \"<\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.forwardButton,\n        children: [\" \", \">\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Thumbnails, {\n        images: this.state.images,\n        thumbnailsSelect: this.thumbnailsSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Imager;","map":{"version":3,"sources":["/home/tohzen/coding/assignments/react-imager/React-Imager-main/src/components/Imager/Imager.js"],"names":["React","Component","Display","Thumbnails","Imager","state","images","bigImage","indexImage","randomImageGenerator","randomNum","Math","floor","random","length","setState","backbutton","forwardButton","console","log","thumbnailsSelect","item","index","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Display from \"..Display/Display\";\nimport Thumbnails from \"./Thumbnails\";\nexport class Imager extends Component {\n  state = {\n    images: [\n      './images/Image1.png',\n      './images/Image3.jpg',\n      './images/Image4.jpg',\n      './images/Image5.png',\n      './images/Image6.png',\n      './images/Image7.png',\n      './images/Image8.png',\n      './images/Image9.png',\n      './images/Image10.png',\n      './images/Image11.png',\n      './images/Image12.png',\n      './images/Image2.png',\n    ],\n    bigImage: \"\",\n    indexImage: \"\",\n  };\n\n  componentDidMount() {\n    let randomNum = Math.floor(Math.random() * this.state.images.length);\n\n    this.setState({\n      bigImage: this.state.images[randomNum],\n      indexImage: randomNum,\n    });\n  }\n\n  randomImageGenerator = () => {\n    let randomNum = Math.floor(Math.random() * this.state.images.length);\n\n    this.setState({\n      bigImage: this.state.images[randomNum],\n    });\n  };\n\n  backbutton = () => {\n    if (this.state.indexImage === 0) {\n      this.setState({\n        bigImage: this.state.images[this.state.images.length - 1],\n        indexImage: this.state.images.length - 1,\n      });\n    } else {\n      this.setState({\n        bigImage: this.state.images[this.state.indexImage - 1],\n        indexImage: this.state.indexImage - 1,\n      });\n    }\n  };\n\n  forwardButton = () => {\n    console.log(this.state.indexImage);\n\n    if (this.state.indexImage === 11) {\n      this.setState({\n        bigImage: this.state.images[0],\n        indexImage: 0,\n      });\n    } else {\n      this.setState({\n        bigImage: this.state.images[this.state.indexImage + 1],\n        indexImage: this.state.indexImage + 1,\n      });\n    }\n  };\n\n  thumbnailsSelect = (item, index) => {\n    console.log(item);\n    this.setState({\n      bigImage: item,\n      indexImage: index,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Display\n          bigImage={this.state.bigImage}\n          randomImageGenerator={this.randomImageGenerator}\n        />\n        <button onClick={this.backbutton}> {\"<\"} </button>\n        <button onClick={this.forwardButton}> {\">\"} </button>\n        <Thumbnails\n          images={this.state.images}\n          thumbnailsSelect={this.thumbnailsSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Imager;\n"]},"metadata":{},"sourceType":"module"}